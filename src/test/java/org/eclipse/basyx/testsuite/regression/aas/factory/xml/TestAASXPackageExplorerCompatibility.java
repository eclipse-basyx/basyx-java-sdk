/*******************************************************************************
* Copyright (C) 2021 the Eclipse BaSyx Authors
*
* This program and the accompanying materials are made
* available under the terms of the Eclipse Public License 2.0
* which is available at https://www.eclipse.org/legal/epl-2.0/
*
* SPDX-License-Identifier: EPL-2.0
******************************************************************************/
package org.eclipse.basyx.testsuite.regression.aas.factory.xml;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

import org.eclipse.basyx.aas.factory.xml.XMLToMetamodelConverter;
import org.eclipse.basyx.aas.metamodel.api.parts.asset.AssetKind;
import org.eclipse.basyx.aas.metamodel.api.parts.asset.IAsset;
import org.eclipse.basyx.submodel.metamodel.api.ISubmodel;
import org.eclipse.basyx.submodel.metamodel.map.submodelelement.operation.Operation;
import org.junit.Test;

/**
 * This tests the workarounds implemented in XML deserialization
 * to handle .xml files generated by the AASXPackageExplorer
 * 
 * @author conradi
 *
 */
public class TestAASXPackageExplorerCompatibility {

	private String xmlInWorkaroundsPath = "src/test/resources/aas/factory/xml/inWorkarounds.xml";
	
	@Test
	public void testAASXPackageExplorerWorkarounds() throws Exception {
		String xml = new String(Files.readAllBytes(Paths.get(xmlInWorkaroundsPath)));
		XMLToMetamodelConverter converter = new XMLToMetamodelConverter(xml);
		List<IAsset> assetList = converter.parseAssets();
		List<ISubmodel> submodelList = converter.parseSubmodels();
		
		assertEquals(1, assetList.size());
		IAsset asset = assetList.iterator().next();
		checkAsset(asset);
		
		assertEquals(1, submodelList.size());
		ISubmodel sm = submodelList.iterator().next();
		checkOperation(sm);
	}
	
	private void checkOperation(ISubmodel sm) {
		Operation op = (Operation) sm.getSubmodelElement("operation_ID");
		assertNotNull(op);
		assertEquals(2, op.getInputVariables().size());
		assertEquals(1, op.getOutputVariables().size());
	}
	
	private void checkAsset(IAsset asset) {
		assertEquals(asset.getAssetKind(), AssetKind.TYPE);
	}
	
}
